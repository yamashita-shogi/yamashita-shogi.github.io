{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"source/images/jetaudio_設定.jpg","path":"images/jetaudio_設定.jpg","modified":1,"renderable":0},{"_id":"source/images/jetaudio_設定詳細.jpg","path":"images/jetaudio_設定詳細.jpg","modified":1,"renderable":0},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/jquery-3.4.1.min.js","path":"js/jquery-3.4.1.min.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff2","path":"css/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/top.webp","path":"css/images/top.webp","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"930c44123710561dceb6b56af799d33a7df2e57d","modified":1667746336344},{"_id":"source/_posts/hexo-landscape-setup.md","hash":"fe16ec850b9eb8301966456cf25c283657bb7aa3","modified":1667835469652},{"_id":"source/_posts/Mac-で-FileproviderdというプロセスのCPU利用率が高い.md","hash":"c201ec9e6bb0cd44a2d25550e0e7f624c599b13a","modified":1667751116729},{"_id":"source/_posts/iPhoneでラジオを聞くならjetAudio.md","hash":"bbb884ea0ed2c67ab3ae3ea06eb33e1d44287369","modified":1667751097585},{"_id":"source/_posts/nuxt-contentを使ったブログの構築.md","hash":"7aab3a3be68ea76428354498ac3eb2fc59f9e476","modified":1668784486424},{"_id":"source/about/index.md","hash":"912c9790f687357f19988da171b351288e537408","modified":1667841637617},{"_id":"source/images/jetaudio_設定詳細.jpg","hash":"81248c69e543499f05138a41356c65290e6f7c13","modified":1667748795166},{"_id":"source/privacy/index.md","hash":"4e3e7c4860bfc2d9c72b5f45d72876b96e01ffcf","modified":1667840052811},{"_id":"source/favicon.ico","hash":"69a367646b7b5449e8aeecc727656414785f1750","modified":1667411279150},{"_id":"source/images/jetaudio_設定.jpg","hash":"5e5cdf15825e094e1e0a48afe4dd4ae980d54b3c","modified":1667748787118},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1668754818459},{"_id":"themes/landscape/.gitignore","hash":"4c78c751a5bbca6b54ad06922947573c967d51c8","modified":1668754818459},{"_id":"themes/landscape/.npmignore","hash":"4c40eab00f24304ca400313319c58d461788ff5e","modified":1668754818459},{"_id":"themes/landscape/_config.yml","hash":"b608c1f1322760dce9805285a602a95832730a2e","modified":1668754818460},{"_id":"themes/landscape/README.md","hash":"1cd90c34c41cc3283a18ec0a9456cefaa317c8fb","modified":1668754818459},{"_id":"themes/landscape/package.json","hash":"9a94875cbf4c27fbe2e63da0496242addc6d2876","modified":1668754818464},{"_id":"themes/landscape/.github/dependabot.yml","hash":"25b0257a0db2c5b6a5756d8990bc2cba12f54fc5","modified":1668754818459},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1668754818463},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1668754818463},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1668754818463},{"_id":"themes/landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":1668754818464},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1668754818464},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1668754818464},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1668754818464},{"_id":"themes/landscape/languages/de-DE.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1668754818460},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1668754818460},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1668754818460},{"_id":"themes/landscape/languages/en-GB.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1668754818460},{"_id":"themes/landscape/languages/en-US.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1668754818460},{"_id":"themes/landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1668754818460},{"_id":"themes/landscape/languages/es-ES.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1668754818460},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1668754818460},{"_id":"themes/landscape/languages/fr-FR.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1668754818460},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1668754818460},{"_id":"themes/landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1668754818460},{"_id":"themes/landscape/languages/hu-HU.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1668754818460},{"_id":"themes/landscape/languages/it-IT.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1668754818460},{"_id":"themes/landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1668754818460},{"_id":"themes/landscape/languages/ja-JP.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1668754818460},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1668754818460},{"_id":"themes/landscape/languages/ko-KR.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1668754818460},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1668754818460},{"_id":"themes/landscape/languages/mn-MN.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1668754818461},{"_id":"themes/landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1668754818461},{"_id":"themes/landscape/languages/nl-NL.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1668754818461},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1668754818461},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1668754818461},{"_id":"themes/landscape/languages/pt-PT.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1668754818461},{"_id":"themes/landscape/languages/ru-RU.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1668754818461},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1668754818461},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1668754818461},{"_id":"themes/landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":1668754818461},{"_id":"themes/landscape/languages/th-TH.yml","hash":"ebfdba9bc4842c829473c1e6e4544344f182724d","modified":1668754818461},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":1668754818461},{"_id":"themes/landscape/languages/th.yml","hash":"84a55b00aa01f03982be294e43c33a20e6d32862","modified":1668754818461},{"_id":"themes/landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":1668754818464},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1668754818461},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"414914ebb159fac1922b056b905e570ac7521925","modified":1668754818461},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1668754818462},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"7cb70a7a54f8c7ae49b10d1f37c0a9b74eab8826","modified":1668754818462},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":1668754818462},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"dfd555c00e85ffc4207c88968d12b219c1f086ec","modified":1668754818462},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1668754818462},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1668754818462},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"f215d92a882247a7cc5ea80b241bedfcec0ea6ca","modified":1668754818462},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"c1acd247e14588cdf101a69460cb8319c18cd078","modified":1668754818462},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1668754818462},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1668754818463},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1668754818463},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":1668754818463},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1668754818463},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1668754818463},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1668754818464},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1668754818463},{"_id":"themes/landscape/source/css/_variables.styl","hash":"581b0cbefdaa5f894922133989dd2d3bf71ded79","modified":1668754818465},{"_id":"themes/landscape/source/css/style.styl","hash":"9c451e5efd72c5bb8b56e8c2b94be731e99db05b","modified":1668754818471},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1668754818471},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1668754818462},{"_id":"themes/landscape/source/js/script.js","hash":"998ed4c5b147e1299bf62beebf33514474f28112","modified":1668754818472},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":1668754818462},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1668754818462},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1668754818462},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1668754818462},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":1668754818462},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1668754818465},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1668754818465},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1668754818464},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"afb93747f15586ab83f3c698937bc2853bb7b1e5","modified":1668754818464},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1668754818464},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1668754818465},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1668754818464},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1668754818464},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1668754818465},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1668754818465},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1668754818465},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1668754818465},{"_id":"themes/landscape/source/css/images/top.webp","hash":"97e11e62bd2cc7195fc87220f41c15f29e8c9bbe","modified":1667469238745},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1668754818471},{"_id":"themes/landscape/source/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1668754818472},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1668754818469},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1668754818470},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1668754818466},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1668754818467},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1668754818469},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1668754818471},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1668754818468}],"Category":[{"name":"Mac","_id":"clamnokeq00041gp870ejbvxz"},{"name":"hexo","_id":"clamnokf100081gp8dmuz5qrx"}],"Data":[],"Page":[{"title":"about","date":"2022-11-07T16:56:25.000Z","_content":"\n競馬ノートというサイトのブログページになる予定です。\n\nメインで技術的なことも書こうと思っていますが、いずれ競馬の記事も混ざってくるかもしれません","source":"about/index.md","raw":"---\ntitle: about\ndate: 2022-11-08 01:56:25\n---\n\n競馬ノートというサイトのブログページになる予定です。\n\nメインで技術的なことも書こうと思っていますが、いずれ競馬の記事も混ざってくるかもしれません","updated":"2022-11-07T17:20:37.617Z","path":"about/index.html","comments":1,"layout":"page","_id":"clamnoke900001gp80raddx1r","content":"<p>競馬ノートというサイトのブログページになる予定です。</p>\n<p>メインで技術的なことも書こうと思っていますが、いずれ競馬の記事も混ざってくるかもしれません</p>\n","site":{"data":{}},"excerpt":"","more":"<p>競馬ノートというサイトのブログページになる予定です。</p>\n<p>メインで技術的なことも書こうと思っていますが、いずれ競馬の記事も混ざってくるかもしれません</p>\n"},{"title":"プライバシーポリシーと免責事項","date":"2022-11-07T15:51:33.000Z","_content":"\n## 使用しているアクセス解析ツール\n当サイトでは、Googleによるアクセス解析ツール「Googleアナリティクス」を利用していて、このトラフィックデータは匿名で収集されており、個人を特定するものではありません。\n\nこの機能はCookieを無効にすることで収集を拒否することが出来ますので、お使いのブラウザの設定をご確認ください。\n\nこの規約に関して、詳しくは[こちら](https://marketingplatform.google.com/about/analytics/terms/jp/)、または[こちら](https://policies.google.com/technologies/partner-sites?hl=ja)をクリックしてください。\n\n\n<!-- ## 当サイトでの広告の配信について\n当サイトでは、第三者配信の広告サービス（Googleアドセンス）を利用しています。\n\nこのような広告配信事業者は、ユーザーの興味に応じた商品やサービスの広告を表示するため、当サイトや他サイトへのアクセスに関する情報 「Cookie」(氏名、住所、メール アドレス、電話番号は含まれません) を使用することがあります。\n\nまたGoogleアドセンスに関して、このプロセスの詳細やこのような情報が広告配信事業者に使用されないようにする方法については、[こちら](https://policies.google.com/technologies/ads?hl=ja)をご覧ください。 -->","source":"privacy/index.md","raw":"---\ntitle: プライバシーポリシーと免責事項\ndate: 2022-11-08 00:51:33\n---\n\n## 使用しているアクセス解析ツール\n当サイトでは、Googleによるアクセス解析ツール「Googleアナリティクス」を利用していて、このトラフィックデータは匿名で収集されており、個人を特定するものではありません。\n\nこの機能はCookieを無効にすることで収集を拒否することが出来ますので、お使いのブラウザの設定をご確認ください。\n\nこの規約に関して、詳しくは[こちら](https://marketingplatform.google.com/about/analytics/terms/jp/)、または[こちら](https://policies.google.com/technologies/partner-sites?hl=ja)をクリックしてください。\n\n\n<!-- ## 当サイトでの広告の配信について\n当サイトでは、第三者配信の広告サービス（Googleアドセンス）を利用しています。\n\nこのような広告配信事業者は、ユーザーの興味に応じた商品やサービスの広告を表示するため、当サイトや他サイトへのアクセスに関する情報 「Cookie」(氏名、住所、メール アドレス、電話番号は含まれません) を使用することがあります。\n\nまたGoogleアドセンスに関して、このプロセスの詳細やこのような情報が広告配信事業者に使用されないようにする方法については、[こちら](https://policies.google.com/technologies/ads?hl=ja)をご覧ください。 -->","updated":"2022-11-07T16:54:12.811Z","path":"privacy/index.html","comments":1,"layout":"page","_id":"clamnokel00021gp83t1tgxvw","content":"<h2 id=\"使用しているアクセス解析ツール\"><a href=\"#使用しているアクセス解析ツール\" class=\"headerlink\" title=\"使用しているアクセス解析ツール\"></a>使用しているアクセス解析ツール</h2><p>当サイトでは、Googleによるアクセス解析ツール「Googleアナリティクス」を利用していて、このトラフィックデータは匿名で収集されており、個人を特定するものではありません。</p>\n<p>この機能はCookieを無効にすることで収集を拒否することが出来ますので、お使いのブラウザの設定をご確認ください。</p>\n<p>この規約に関して、詳しくは<a href=\"https://marketingplatform.google.com/about/analytics/terms/jp/\">こちら</a>、または<a href=\"https://policies.google.com/technologies/partner-sites?hl=ja\">こちら</a>をクリックしてください。</p>\n<!-- ## 当サイトでの広告の配信について\n当サイトでは、第三者配信の広告サービス（Googleアドセンス）を利用しています。\n\nこのような広告配信事業者は、ユーザーの興味に応じた商品やサービスの広告を表示するため、当サイトや他サイトへのアクセスに関する情報 「Cookie」(氏名、住所、メール アドレス、電話番号は含まれません) を使用することがあります。\n\nまたGoogleアドセンスに関して、このプロセスの詳細やこのような情報が広告配信事業者に使用されないようにする方法については、[こちら](https://policies.google.com/technologies/ads?hl=ja)をご覧ください。 -->","site":{"data":{}},"excerpt":"","more":"<h2 id=\"使用しているアクセス解析ツール\"><a href=\"#使用しているアクセス解析ツール\" class=\"headerlink\" title=\"使用しているアクセス解析ツール\"></a>使用しているアクセス解析ツール</h2><p>当サイトでは、Googleによるアクセス解析ツール「Googleアナリティクス」を利用していて、このトラフィックデータは匿名で収集されており、個人を特定するものではありません。</p>\n<p>この機能はCookieを無効にすることで収集を拒否することが出来ますので、お使いのブラウザの設定をご確認ください。</p>\n<p>この規約に関して、詳しくは<a href=\"https://marketingplatform.google.com/about/analytics/terms/jp/\">こちら</a>、または<a href=\"https://policies.google.com/technologies/partner-sites?hl=ja\">こちら</a>をクリックしてください。</p>\n<!-- ## 当サイトでの広告の配信について\n当サイトでは、第三者配信の広告サービス（Googleアドセンス）を利用しています。\n\nこのような広告配信事業者は、ユーザーの興味に応じた商品やサービスの広告を表示するため、当サイトや他サイトへのアクセスに関する情報 「Cookie」(氏名、住所、メール アドレス、電話番号は含まれません) を使用することがあります。\n\nまたGoogleアドセンスに関して、このプロセスの詳細やこのような情報が広告配信事業者に使用されないようにする方法については、[こちら](https://policies.google.com/technologies/ads?hl=ja)をご覧ください。 -->"}],"Post":[{"title":"Mac で Fileproviderd というプロセスのCPU利用率が高い","date":"2022-11-06T15:08:30.000Z","_content":"\n## 端的に\nMacでGoogle driveアプリを入れてからこいつがアクティビティモニターのCPU利用率の上段にずっと居るようになりました。\n\n起動はさせていなかったのですが、結局アプリケーションからの削除まで実施して、ゴミ箱を空にしたら収まりました。\n\nなぜかゴミ箱から削除までが必要でした\n\n短いですが、どなたかの参考になれば…","source":"_posts/Mac-で-FileproviderdというプロセスのCPU利用率が高い.md","raw":"---\ntitle: Mac で Fileproviderd というプロセスのCPU利用率が高い\ndate: 2022-11-07 00:08:30\ncategories:\n- Mac\ntags:\n- Fileproviderd\n---\n\n## 端的に\nMacでGoogle driveアプリを入れてからこいつがアクティビティモニターのCPU利用率の上段にずっと居るようになりました。\n\n起動はさせていなかったのですが、結局アプリケーションからの削除まで実施して、ゴミ箱を空にしたら収まりました。\n\nなぜかゴミ箱から削除までが必要でした\n\n短いですが、どなたかの参考になれば…","slug":"Mac-で-FileproviderdというプロセスのCPU利用率が高い","published":1,"updated":"2022-11-06T16:11:56.729Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clamnokee00011gp87ph0a2qf","content":"<h2 id=\"端的に\"><a href=\"#端的に\" class=\"headerlink\" title=\"端的に\"></a>端的に</h2><p>MacでGoogle driveアプリを入れてからこいつがアクティビティモニターのCPU利用率の上段にずっと居るようになりました。</p>\n<p>起動はさせていなかったのですが、結局アプリケーションからの削除まで実施して、ゴミ箱を空にしたら収まりました。</p>\n<p>なぜかゴミ箱から削除までが必要でした</p>\n<p>短いですが、どなたかの参考になれば…</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"端的に\"><a href=\"#端的に\" class=\"headerlink\" title=\"端的に\"></a>端的に</h2><p>MacでGoogle driveアプリを入れてからこいつがアクティビティモニターのCPU利用率の上段にずっと居るようになりました。</p>\n<p>起動はさせていなかったのですが、結局アプリケーションからの削除まで実施して、ゴミ箱を空にしたら収まりました。</p>\n<p>なぜかゴミ箱から削除までが必要でした</p>\n<p>短いですが、どなたかの参考になれば…</p>\n"},{"title":"hexo デフォルトのlandscapeテーマのバナー画像を変更する","date":"2022-11-03T15:08:30.000Z","_content":"\n## 概要\n変更方法は出てくるけどデフォルトの場合どこに画像置けばいいんだとなった\n\n## 方法\nルートディレクトリで以下 theme の clone を行ったあと\n```\ngit clone --depth 1 https://github.com/hexojs/hexo-theme-landscape themes/landscape\n```\n\n以下 PATH に置き換えたい画像を配置して\n`themes/landscape/source/css/images/`\n\nそのあとの変更は[こちら](https://al-batross.net/2019/12/26/hexo-change-banner/)を参考にさせていただきました。\n\nローカル確認段階なので、 `hexo clean && hexo generate` はやっておりません\n","source":"_posts/hexo-landscape-setup.md","raw":"---\ntitle: hexo デフォルトのlandscapeテーマのバナー画像を変更する\ndate: 2022-11-04 00:08:30\ncategories:\n- hexo\ntags:\n- \n---\n\n## 概要\n変更方法は出てくるけどデフォルトの場合どこに画像置けばいいんだとなった\n\n## 方法\nルートディレクトリで以下 theme の clone を行ったあと\n```\ngit clone --depth 1 https://github.com/hexojs/hexo-theme-landscape themes/landscape\n```\n\n以下 PATH に置き換えたい画像を配置して\n`themes/landscape/source/css/images/`\n\nそのあとの変更は[こちら](https://al-batross.net/2019/12/26/hexo-change-banner/)を参考にさせていただきました。\n\nローカル確認段階なので、 `hexo clean && hexo generate` はやっておりません\n","slug":"hexo-landscape-setup","published":1,"updated":"2022-11-07T15:37:49.652Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clamnokem00031gp8fsgh6dii","content":"<h2 id=\"概要\"><a href=\"#概要\" class=\"headerlink\" title=\"概要\"></a>概要</h2><p>変更方法は出てくるけどデフォルトの場合どこに画像置けばいいんだとなった</p>\n<h2 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h2><p>ルートディレクトリで以下 theme の clone を行ったあと</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone --depth 1 https://github.com/hexojs/hexo-theme-landscape themes/landscape</span><br></pre></td></tr></table></figure>\n\n<p>以下 PATH に置き換えたい画像を配置して<br><code>themes/landscape/source/css/images/</code></p>\n<p>そのあとの変更は<a href=\"https://al-batross.net/2019/12/26/hexo-change-banner/\">こちら</a>を参考にさせていただきました。</p>\n<p>ローカル確認段階なので、 <code>hexo clean &amp;&amp; hexo generate</code> はやっておりません</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"概要\"><a href=\"#概要\" class=\"headerlink\" title=\"概要\"></a>概要</h2><p>変更方法は出てくるけどデフォルトの場合どこに画像置けばいいんだとなった</p>\n<h2 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h2><p>ルートディレクトリで以下 theme の clone を行ったあと</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone --depth 1 https://github.com/hexojs/hexo-theme-landscape themes/landscape</span><br></pre></td></tr></table></figure>\n\n<p>以下 PATH に置き換えたい画像を配置して<br><code>themes/landscape/source/css/images/</code></p>\n<p>そのあとの変更は<a href=\"https://al-batross.net/2019/12/26/hexo-change-banner/\">こちら</a>を参考にさせていただきました。</p>\n<p>ローカル確認段階なので、 <code>hexo clean &amp;&amp; hexo generate</code> はやっておりません</p>\n"},{"title":"iPhoneでラジオを聞くならjetAudio","date":"2022-11-06T15:33:54.000Z","_content":"\nついにたどり着きました\n\n## ミュージックはミュージック\n私はラジオを良く聞きます。\n\nただ、iOS標準のミュージックアプリはラジオを聴くには不便です。\n\nなぜなら面白い部分は導入部分からだったり1つのやり取りだったり、リアクションだったり…いろんな箇所を何度も繰り返し聞きたくなるからです。\n\n標準ミュージックアプリはシーク操作による移動しかできないため、慎重に操作しないと行き過ぎることが多々あります。シーク操作で10秒戻ったりするのは簡単ではないです。\n\n理想はpodcastアプリのようにワンタップで15秒とか何ならカスタマイズした秒数戻せるもの。\n\nそう思ってたくさん検索しましたが、なかなかいいモノにたどり着かず、1つずつそれっぽいアプリを試していたところでjetAudioにたどり着きました。\n\n## jetAudio\n**[「ジェットオーディオ - HD音楽プレーヤー」をApp Storeで](https://apps.apple.com/jp/app/%E3%82%B8%E3%82%A7%E3%83%83%E3%83%88%E3%82%AA%E3%83%BC%E3%83%87%E3%82%A3%E3%82%AA-hd%E9%9F%B3%E6%A5%BD%E3%83%97%E3%83%AC%E3%83%BC%E3%83%A4%E3%83%BC/id894888135)**\n\nこのアプリは見事に需要と一致しておりました！\n* 最短2秒戻し・送りボタン\n* 特定部分の繰り返しも可能（使ったことない\n* 速度調整も可能\n\nなど主な機能をパッと書きましたが、正直多機能で全て使いこなせている感じはありません。あとは広告も出ますね。\n\nそれでも私にとっては最高のラジオ聴きアプリです。\n\n***\n\n実際の設定画面や設定値です\n\n![設定](/images/jetaudio_設定.jpg)\n\n設定幅\n\n![設定詳細](/images/jetaudio_設定詳細.jpg)\n\n***\n\n理想はpodcastアプリ同様、ロック画面からの指定時間の戻しですが、本当にケチをつけるならという感じで、個人的にそこまで重要視していません。\n\nシークによる慎重な操作から開放された時点で満足です。\n\n外出時にもパッと操作して行き来できるので最高ですね。\n\nラジオ以外でも同じような不満や需要を持っている方が居ればぜひ試してみて欲しいですね！\n\n誰かの役に立てばいいなと思いつつ。\n","source":"_posts/iPhoneでラジオを聞くならjetAudio.md","raw":"---\ntitle: iPhoneでラジオを聞くならjetAudio\ndate: 2022-11-07 00:33:54\ntags:\n- ラジオ\n---\n\nついにたどり着きました\n\n## ミュージックはミュージック\n私はラジオを良く聞きます。\n\nただ、iOS標準のミュージックアプリはラジオを聴くには不便です。\n\nなぜなら面白い部分は導入部分からだったり1つのやり取りだったり、リアクションだったり…いろんな箇所を何度も繰り返し聞きたくなるからです。\n\n標準ミュージックアプリはシーク操作による移動しかできないため、慎重に操作しないと行き過ぎることが多々あります。シーク操作で10秒戻ったりするのは簡単ではないです。\n\n理想はpodcastアプリのようにワンタップで15秒とか何ならカスタマイズした秒数戻せるもの。\n\nそう思ってたくさん検索しましたが、なかなかいいモノにたどり着かず、1つずつそれっぽいアプリを試していたところでjetAudioにたどり着きました。\n\n## jetAudio\n**[「ジェットオーディオ - HD音楽プレーヤー」をApp Storeで](https://apps.apple.com/jp/app/%E3%82%B8%E3%82%A7%E3%83%83%E3%83%88%E3%82%AA%E3%83%BC%E3%83%87%E3%82%A3%E3%82%AA-hd%E9%9F%B3%E6%A5%BD%E3%83%97%E3%83%AC%E3%83%BC%E3%83%A4%E3%83%BC/id894888135)**\n\nこのアプリは見事に需要と一致しておりました！\n* 最短2秒戻し・送りボタン\n* 特定部分の繰り返しも可能（使ったことない\n* 速度調整も可能\n\nなど主な機能をパッと書きましたが、正直多機能で全て使いこなせている感じはありません。あとは広告も出ますね。\n\nそれでも私にとっては最高のラジオ聴きアプリです。\n\n***\n\n実際の設定画面や設定値です\n\n![設定](/images/jetaudio_設定.jpg)\n\n設定幅\n\n![設定詳細](/images/jetaudio_設定詳細.jpg)\n\n***\n\n理想はpodcastアプリ同様、ロック画面からの指定時間の戻しですが、本当にケチをつけるならという感じで、個人的にそこまで重要視していません。\n\nシークによる慎重な操作から開放された時点で満足です。\n\n外出時にもパッと操作して行き来できるので最高ですね。\n\nラジオ以外でも同じような不満や需要を持っている方が居ればぜひ試してみて欲しいですね！\n\n誰かの役に立てばいいなと思いつつ。\n","slug":"iPhoneでラジオを聞くならjetAudio","published":1,"updated":"2022-11-06T16:11:37.585Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clamnokev00061gp82ylxh4rc","content":"<p>ついにたどり着きました</p>\n<h2 id=\"ミュージックはミュージック\"><a href=\"#ミュージックはミュージック\" class=\"headerlink\" title=\"ミュージックはミュージック\"></a>ミュージックはミュージック</h2><p>私はラジオを良く聞きます。</p>\n<p>ただ、iOS標準のミュージックアプリはラジオを聴くには不便です。</p>\n<p>なぜなら面白い部分は導入部分からだったり1つのやり取りだったり、リアクションだったり…いろんな箇所を何度も繰り返し聞きたくなるからです。</p>\n<p>標準ミュージックアプリはシーク操作による移動しかできないため、慎重に操作しないと行き過ぎることが多々あります。シーク操作で10秒戻ったりするのは簡単ではないです。</p>\n<p>理想はpodcastアプリのようにワンタップで15秒とか何ならカスタマイズした秒数戻せるもの。</p>\n<p>そう思ってたくさん検索しましたが、なかなかいいモノにたどり着かず、1つずつそれっぽいアプリを試していたところでjetAudioにたどり着きました。</p>\n<h2 id=\"jetAudio\"><a href=\"#jetAudio\" class=\"headerlink\" title=\"jetAudio\"></a>jetAudio</h2><p><strong><a href=\"https://apps.apple.com/jp/app/%E3%82%B8%E3%82%A7%E3%83%83%E3%83%88%E3%82%AA%E3%83%BC%E3%83%87%E3%82%A3%E3%82%AA-hd%E9%9F%B3%E6%A5%BD%E3%83%97%E3%83%AC%E3%83%BC%E3%83%A4%E3%83%BC/id894888135\">「ジェットオーディオ - HD音楽プレーヤー」をApp Storeで</a></strong></p>\n<p>このアプリは見事に需要と一致しておりました！</p>\n<ul>\n<li>最短2秒戻し・送りボタン</li>\n<li>特定部分の繰り返しも可能（使ったことない</li>\n<li>速度調整も可能</li>\n</ul>\n<p>など主な機能をパッと書きましたが、正直多機能で全て使いこなせている感じはありません。あとは広告も出ますね。</p>\n<p>それでも私にとっては最高のラジオ聴きアプリです。</p>\n<hr>\n<p>実際の設定画面や設定値です</p>\n<p><img src=\"/images/jetaudio_%E8%A8%AD%E5%AE%9A.jpg\" alt=\"設定\"></p>\n<p>設定幅</p>\n<p><img src=\"/images/jetaudio_%E8%A8%AD%E5%AE%9A%E8%A9%B3%E7%B4%B0.jpg\" alt=\"設定詳細\"></p>\n<hr>\n<p>理想はpodcastアプリ同様、ロック画面からの指定時間の戻しですが、本当にケチをつけるならという感じで、個人的にそこまで重要視していません。</p>\n<p>シークによる慎重な操作から開放された時点で満足です。</p>\n<p>外出時にもパッと操作して行き来できるので最高ですね。</p>\n<p>ラジオ以外でも同じような不満や需要を持っている方が居ればぜひ試してみて欲しいですね！</p>\n<p>誰かの役に立てばいいなと思いつつ。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>ついにたどり着きました</p>\n<h2 id=\"ミュージックはミュージック\"><a href=\"#ミュージックはミュージック\" class=\"headerlink\" title=\"ミュージックはミュージック\"></a>ミュージックはミュージック</h2><p>私はラジオを良く聞きます。</p>\n<p>ただ、iOS標準のミュージックアプリはラジオを聴くには不便です。</p>\n<p>なぜなら面白い部分は導入部分からだったり1つのやり取りだったり、リアクションだったり…いろんな箇所を何度も繰り返し聞きたくなるからです。</p>\n<p>標準ミュージックアプリはシーク操作による移動しかできないため、慎重に操作しないと行き過ぎることが多々あります。シーク操作で10秒戻ったりするのは簡単ではないです。</p>\n<p>理想はpodcastアプリのようにワンタップで15秒とか何ならカスタマイズした秒数戻せるもの。</p>\n<p>そう思ってたくさん検索しましたが、なかなかいいモノにたどり着かず、1つずつそれっぽいアプリを試していたところでjetAudioにたどり着きました。</p>\n<h2 id=\"jetAudio\"><a href=\"#jetAudio\" class=\"headerlink\" title=\"jetAudio\"></a>jetAudio</h2><p><strong><a href=\"https://apps.apple.com/jp/app/%E3%82%B8%E3%82%A7%E3%83%83%E3%83%88%E3%82%AA%E3%83%BC%E3%83%87%E3%82%A3%E3%82%AA-hd%E9%9F%B3%E6%A5%BD%E3%83%97%E3%83%AC%E3%83%BC%E3%83%A4%E3%83%BC/id894888135\">「ジェットオーディオ - HD音楽プレーヤー」をApp Storeで</a></strong></p>\n<p>このアプリは見事に需要と一致しておりました！</p>\n<ul>\n<li>最短2秒戻し・送りボタン</li>\n<li>特定部分の繰り返しも可能（使ったことない</li>\n<li>速度調整も可能</li>\n</ul>\n<p>など主な機能をパッと書きましたが、正直多機能で全て使いこなせている感じはありません。あとは広告も出ますね。</p>\n<p>それでも私にとっては最高のラジオ聴きアプリです。</p>\n<hr>\n<p>実際の設定画面や設定値です</p>\n<p><img src=\"/images/jetaudio_%E8%A8%AD%E5%AE%9A.jpg\" alt=\"設定\"></p>\n<p>設定幅</p>\n<p><img src=\"/images/jetaudio_%E8%A8%AD%E5%AE%9A%E8%A9%B3%E7%B4%B0.jpg\" alt=\"設定詳細\"></p>\n<hr>\n<p>理想はpodcastアプリ同様、ロック画面からの指定時間の戻しですが、本当にケチをつけるならという感じで、個人的にそこまで重要視していません。</p>\n<p>シークによる慎重な操作から開放された時点で満足です。</p>\n<p>外出時にもパッと操作して行き来できるので最高ですね。</p>\n<p>ラジオ以外でも同じような不満や需要を持っている方が居ればぜひ試してみて欲しいですね！</p>\n<p>誰かの役に立てばいいなと思いつつ。</p>\n"},{"title":"nuxt/contentを使ったブログの構築","date":"2022-11-08T07:39:35.000Z","_content":"\n## 使用するパッケージについて\nmarkdown-it を最初使っていたのですが、build後のスクリプトに未使用の部分が多くあり、それがページスコアの `time to interactive` に影響を及ぼしていたので nuxt/content に切り替えました。\n\n切り替えたことで `time to interactive` と `First Contentful Paint` の向上が見られましたので、contentが自分の使い方に合っていたということだと思いますが。\n\n\n## 構築\nnuxt/content を使って構築していくにあたり、以下を参考にさせていただきました🙇‍♂️\n[Create Medium Style Blog Theme with Nuxt JS - Pramod Devireddy](https://domarpdev.github.io/blog/create-medium-style-blog-theme/)\n\n\ncontentはこんな感じで入れます\n```\nnpm i @nuxt/content\n```\n\n\nファイル構成はこんな形になります\n```\n├── content\n│   └── blog\n│       └── ほげ.md\n├── pages\n│   └── blog\n│       ├── _slug.vue\n│       └── index.vue\n```\n\nそれぞれの役割は以下です\n\n* content/blog/ほげ.md\n  * markdownで書くブログ記事の内容\n* pages/blog/index.vue\n  * blog/ でアクセスしたときの一覧ページのvueファイル\n* pages/blog/_slug.vue\n  * 各ブログ記事を出すためのvueファイル\n\nblog一覧ページには以下のような感じで $content を使って記事を検索し、その結果をvueで使うような形です\n```\n<script>\nexport default {\n  async asyncData ({ $content, params }) {\n    const query = await $content(\"blog\", params.slug).sortBy(\"createdAt\", \"desc\")\n    const blog = await query.fetch()\n    return { blog }\n  }\n}\n</script>\n```\n\ncontent情報が取れていれば、vueの方では例えば以下のような形でforをすることで記事の一覧を作ることができます。\n```\n<v-card\n  v-for=\"b of blog\"\n  :key=\"b.slug\"\n>\n```\n\nこんな感じで構成が整えば `npm run dev` 等で `http://localhost:3000/blog/` などといったURLでアクセスできます。\n\n記事一覧が出ているでしょうか？\n\n\n\n## タグがついた記事の一覧表示\ncontent以下のmarkdownファイルに以下のようにタグをつけることができます\n```\n---\ntitle: hoge\ntags:\n  - ふが\n---\n```\n\nこうやってつけたタグごとの一覧ページも出すことができます\n\nファイル構成はこんな感じになります\n```\n├── pages\n│   └── blog\n│       ├── tag\n│       │    └── _slug\n│       │          └── index.vue\n│       ├── _slug.vue\n│       └── index.vue\n```\n\n要は `pages/blog/tag/_slug/index.vue` の追加だけです。\n\n\n中身はこんな形です\n```\n<template>\n  <v-container mt-50 pt-50>\n    <h2\n      class=\"my-4 mx-9\"\n      justify=\"center\"\n      align=\"center\"\n    >\n      <v-icon>$tagOutlineIcon</v-icon>『{{ $route.params.slug }}』 のタグがついた記事\n    </h2>\n    <div class=\"d-flex flex-wrap\">\n        <v-card\n          class=\"ma-6\"\n          elevation=\"5\"\n          v-for=\"b of blog\"\n          :key=\"b.slug\"\n          width=\"500\"\n        >\n          <NuxtLink\n            class=\"post-card\"\n            :to=\"{ name: 'blog-slug', params: { slug: b.slug } }\"\n          >\n          </NuxtLink>\n        </v-card>\n    </div>\n\n    <template v-if=\"blog.length === 0\">\n      <div class=\"d-flex flex-wrap justify-center fill-heilght\">\n        {{ $route.params.name }} に該当する記事はありませんでした\n      </div>\n    </template>\n\n  </v-container>\n</template>\n\n<script>\nexport default {\n  head() {\n    return {\n      title: this.$route.params.slug\n    }\n  },\n  async asyncData ({ $content, params }) {\n    const tag = params.slug\n    const blog = await $content('blog')\n      .only(['title', 'img', 'createdAt', 'slug'])\n      .where({ tags: { $contains: tag } })\n      .sortBy('createdAt', 'desc')\n      .fetch()\n    return { tag, blog };\n  }\n}\n</script>\n\n<style>\n.post-card {\n  text-decoration: none;\n}\n</style>\n```\n\nこうすると、`http://localhost:3000/blog/タグA/` というURLで、タグAのついた記事があれば一覧が出ますし、なければ『ありません』と出ます。\n\n\n## まとめ\n簡単にオリジナルのブログをつくれました。参考になる記事もたくさんあるので、構築もしやすいです。\n\nただ記事一覧の出し方やブログのレイアウトなど、細かい調整にある程度の知識も必要になり、自分はそこに時間をかけるのを避けたくて、代わりにこのブログを作り始めました。\n（タグ一覧どこにどう出そうか、記事一覧もっと見やすくだしたいけどどっからどう着手したらいいか　などの部分）\n\n勉強にはなったんですけどね。熱が出てきたらまた再開するかもしれませんが。\n\n\n","source":"_posts/nuxt-contentを使ったブログの構築.md","raw":"---\ntitle: nuxt/contentを使ったブログの構築\ndate: 2022-11-08 16:39:35\ncategories:\ntags:\n---\n\n## 使用するパッケージについて\nmarkdown-it を最初使っていたのですが、build後のスクリプトに未使用の部分が多くあり、それがページスコアの `time to interactive` に影響を及ぼしていたので nuxt/content に切り替えました。\n\n切り替えたことで `time to interactive` と `First Contentful Paint` の向上が見られましたので、contentが自分の使い方に合っていたということだと思いますが。\n\n\n## 構築\nnuxt/content を使って構築していくにあたり、以下を参考にさせていただきました🙇‍♂️\n[Create Medium Style Blog Theme with Nuxt JS - Pramod Devireddy](https://domarpdev.github.io/blog/create-medium-style-blog-theme/)\n\n\ncontentはこんな感じで入れます\n```\nnpm i @nuxt/content\n```\n\n\nファイル構成はこんな形になります\n```\n├── content\n│   └── blog\n│       └── ほげ.md\n├── pages\n│   └── blog\n│       ├── _slug.vue\n│       └── index.vue\n```\n\nそれぞれの役割は以下です\n\n* content/blog/ほげ.md\n  * markdownで書くブログ記事の内容\n* pages/blog/index.vue\n  * blog/ でアクセスしたときの一覧ページのvueファイル\n* pages/blog/_slug.vue\n  * 各ブログ記事を出すためのvueファイル\n\nblog一覧ページには以下のような感じで $content を使って記事を検索し、その結果をvueで使うような形です\n```\n<script>\nexport default {\n  async asyncData ({ $content, params }) {\n    const query = await $content(\"blog\", params.slug).sortBy(\"createdAt\", \"desc\")\n    const blog = await query.fetch()\n    return { blog }\n  }\n}\n</script>\n```\n\ncontent情報が取れていれば、vueの方では例えば以下のような形でforをすることで記事の一覧を作ることができます。\n```\n<v-card\n  v-for=\"b of blog\"\n  :key=\"b.slug\"\n>\n```\n\nこんな感じで構成が整えば `npm run dev` 等で `http://localhost:3000/blog/` などといったURLでアクセスできます。\n\n記事一覧が出ているでしょうか？\n\n\n\n## タグがついた記事の一覧表示\ncontent以下のmarkdownファイルに以下のようにタグをつけることができます\n```\n---\ntitle: hoge\ntags:\n  - ふが\n---\n```\n\nこうやってつけたタグごとの一覧ページも出すことができます\n\nファイル構成はこんな感じになります\n```\n├── pages\n│   └── blog\n│       ├── tag\n│       │    └── _slug\n│       │          └── index.vue\n│       ├── _slug.vue\n│       └── index.vue\n```\n\n要は `pages/blog/tag/_slug/index.vue` の追加だけです。\n\n\n中身はこんな形です\n```\n<template>\n  <v-container mt-50 pt-50>\n    <h2\n      class=\"my-4 mx-9\"\n      justify=\"center\"\n      align=\"center\"\n    >\n      <v-icon>$tagOutlineIcon</v-icon>『{{ $route.params.slug }}』 のタグがついた記事\n    </h2>\n    <div class=\"d-flex flex-wrap\">\n        <v-card\n          class=\"ma-6\"\n          elevation=\"5\"\n          v-for=\"b of blog\"\n          :key=\"b.slug\"\n          width=\"500\"\n        >\n          <NuxtLink\n            class=\"post-card\"\n            :to=\"{ name: 'blog-slug', params: { slug: b.slug } }\"\n          >\n          </NuxtLink>\n        </v-card>\n    </div>\n\n    <template v-if=\"blog.length === 0\">\n      <div class=\"d-flex flex-wrap justify-center fill-heilght\">\n        {{ $route.params.name }} に該当する記事はありませんでした\n      </div>\n    </template>\n\n  </v-container>\n</template>\n\n<script>\nexport default {\n  head() {\n    return {\n      title: this.$route.params.slug\n    }\n  },\n  async asyncData ({ $content, params }) {\n    const tag = params.slug\n    const blog = await $content('blog')\n      .only(['title', 'img', 'createdAt', 'slug'])\n      .where({ tags: { $contains: tag } })\n      .sortBy('createdAt', 'desc')\n      .fetch()\n    return { tag, blog };\n  }\n}\n</script>\n\n<style>\n.post-card {\n  text-decoration: none;\n}\n</style>\n```\n\nこうすると、`http://localhost:3000/blog/タグA/` というURLで、タグAのついた記事があれば一覧が出ますし、なければ『ありません』と出ます。\n\n\n## まとめ\n簡単にオリジナルのブログをつくれました。参考になる記事もたくさんあるので、構築もしやすいです。\n\nただ記事一覧の出し方やブログのレイアウトなど、細かい調整にある程度の知識も必要になり、自分はそこに時間をかけるのを避けたくて、代わりにこのブログを作り始めました。\n（タグ一覧どこにどう出そうか、記事一覧もっと見やすくだしたいけどどっからどう着手したらいいか　などの部分）\n\n勉強にはなったんですけどね。熱が出てきたらまた再開するかもしれませんが。\n\n\n","slug":"nuxt-contentを使ったブログの構築","published":1,"updated":"2022-11-18T15:14:46.424Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clamnokey00071gp80zdufik4","content":"<h2 id=\"使用するパッケージについて\"><a href=\"#使用するパッケージについて\" class=\"headerlink\" title=\"使用するパッケージについて\"></a>使用するパッケージについて</h2><p>markdown-it を最初使っていたのですが、build後のスクリプトに未使用の部分が多くあり、それがページスコアの <code>time to interactive</code> に影響を及ぼしていたので nuxt&#x2F;content に切り替えました。</p>\n<p>切り替えたことで <code>time to interactive</code> と <code>First Contentful Paint</code> の向上が見られましたので、contentが自分の使い方に合っていたということだと思いますが。</p>\n<h2 id=\"構築\"><a href=\"#構築\" class=\"headerlink\" title=\"構築\"></a>構築</h2><p>nuxt&#x2F;content を使って構築していくにあたり、以下を参考にさせていただきました🙇‍♂️<br><a href=\"https://domarpdev.github.io/blog/create-medium-style-blog-theme/\">Create Medium Style Blog Theme with Nuxt JS - Pramod Devireddy</a></p>\n<p>contentはこんな感じで入れます</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm i @nuxt/content</span><br></pre></td></tr></table></figure>\n\n\n<p>ファイル構成はこんな形になります</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">├── content</span><br><span class=\"line\">│   └── blog</span><br><span class=\"line\">│       └── ほげ.md</span><br><span class=\"line\">├── pages</span><br><span class=\"line\">│   └── blog</span><br><span class=\"line\">│       ├── _slug.vue</span><br><span class=\"line\">│       └── index.vue</span><br></pre></td></tr></table></figure>\n\n<p>それぞれの役割は以下です</p>\n<ul>\n<li>content&#x2F;blog&#x2F;ほげ.md<ul>\n<li>markdownで書くブログ記事の内容</li>\n</ul>\n</li>\n<li>pages&#x2F;blog&#x2F;index.vue<ul>\n<li>blog&#x2F; でアクセスしたときの一覧ページのvueファイル</li>\n</ul>\n</li>\n<li>pages&#x2F;blog&#x2F;_slug.vue<ul>\n<li>各ブログ記事を出すためのvueファイル</li>\n</ul>\n</li>\n</ul>\n<p>blog一覧ページには以下のような感じで $content を使って記事を検索し、その結果をvueで使うような形です</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  async asyncData (&#123; $content, params &#125;) &#123;</span><br><span class=\"line\">    const query = await $content(&quot;blog&quot;, params.slug).sortBy(&quot;createdAt&quot;, &quot;desc&quot;)</span><br><span class=\"line\">    const blog = await query.fetch()</span><br><span class=\"line\">    return &#123; blog &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>content情報が取れていれば、vueの方では例えば以下のような形でforをすることで記事の一覧を作ることができます。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;v-card</span><br><span class=\"line\">  v-for=&quot;b of blog&quot;</span><br><span class=\"line\">  :key=&quot;b.slug&quot;</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n\n<p>こんな感じで構成が整えば <code>npm run dev</code> 等で <code>http://localhost:3000/blog/</code> などといったURLでアクセスできます。</p>\n<p>記事一覧が出ているでしょうか？</p>\n<h2 id=\"タグがついた記事の一覧表示\"><a href=\"#タグがついた記事の一覧表示\" class=\"headerlink\" title=\"タグがついた記事の一覧表示\"></a>タグがついた記事の一覧表示</h2><p>content以下のmarkdownファイルに以下のようにタグをつけることができます</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: hoge</span><br><span class=\"line\">tags:</span><br><span class=\"line\">  - ふが</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p>こうやってつけたタグごとの一覧ページも出すことができます</p>\n<p>ファイル構成はこんな感じになります</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">├── pages</span><br><span class=\"line\">│   └── blog</span><br><span class=\"line\">│       ├── tag</span><br><span class=\"line\">│       │    └── _slug</span><br><span class=\"line\">│       │          └── index.vue</span><br><span class=\"line\">│       ├── _slug.vue</span><br><span class=\"line\">│       └── index.vue</span><br></pre></td></tr></table></figure>\n\n<p>要は <code>pages/blog/tag/_slug/index.vue</code> の追加だけです。</p>\n<p>中身はこんな形です</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;v-container mt-50 pt-50&gt;</span><br><span class=\"line\">    &lt;h2</span><br><span class=\"line\">      class=&quot;my-4 mx-9&quot;</span><br><span class=\"line\">      justify=&quot;center&quot;</span><br><span class=\"line\">      align=&quot;center&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">      &lt;v-icon&gt;$tagOutlineIcon&lt;/v-icon&gt;『&#123;&#123; $route.params.slug &#125;&#125;』 のタグがついた記事</span><br><span class=\"line\">    &lt;/h2&gt;</span><br><span class=\"line\">    &lt;div class=&quot;d-flex flex-wrap&quot;&gt;</span><br><span class=\"line\">        &lt;v-card</span><br><span class=\"line\">          class=&quot;ma-6&quot;</span><br><span class=\"line\">          elevation=&quot;5&quot;</span><br><span class=\"line\">          v-for=&quot;b of blog&quot;</span><br><span class=\"line\">          :key=&quot;b.slug&quot;</span><br><span class=\"line\">          width=&quot;500&quot;</span><br><span class=\"line\">        &gt;</span><br><span class=\"line\">          &lt;NuxtLink</span><br><span class=\"line\">            class=&quot;post-card&quot;</span><br><span class=\"line\">            :to=&quot;&#123; name: &#x27;blog-slug&#x27;, params: &#123; slug: b.slug &#125; &#125;&quot;</span><br><span class=\"line\">          &gt;</span><br><span class=\"line\">          &lt;/NuxtLink&gt;</span><br><span class=\"line\">        &lt;/v-card&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;template v-if=&quot;blog.length === 0&quot;&gt;</span><br><span class=\"line\">      &lt;div class=&quot;d-flex flex-wrap justify-center fill-heilght&quot;&gt;</span><br><span class=\"line\">        &#123;&#123; $route.params.name &#125;&#125; に該当する記事はありませんでした</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">    &lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;/v-container&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  head() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      title: this.$route.params.slug</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  async asyncData (&#123; $content, params &#125;) &#123;</span><br><span class=\"line\">    const tag = params.slug</span><br><span class=\"line\">    const blog = await $content(&#x27;blog&#x27;)</span><br><span class=\"line\">      .only([&#x27;title&#x27;, &#x27;img&#x27;, &#x27;createdAt&#x27;, &#x27;slug&#x27;])</span><br><span class=\"line\">      .where(&#123; tags: &#123; $contains: tag &#125; &#125;)</span><br><span class=\"line\">      .sortBy(&#x27;createdAt&#x27;, &#x27;desc&#x27;)</span><br><span class=\"line\">      .fetch()</span><br><span class=\"line\">    return &#123; tag, blog &#125;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">.post-card &#123;</span><br><span class=\"line\">  text-decoration: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n<p>こうすると、<code>http://localhost:3000/blog/タグA/</code> というURLで、タグAのついた記事があれば一覧が出ますし、なければ『ありません』と出ます。</p>\n<h2 id=\"まとめ\"><a href=\"#まとめ\" class=\"headerlink\" title=\"まとめ\"></a>まとめ</h2><p>簡単にオリジナルのブログをつくれました。参考になる記事もたくさんあるので、構築もしやすいです。</p>\n<p>ただ記事一覧の出し方やブログのレイアウトなど、細かい調整にある程度の知識も必要になり、自分はそこに時間をかけるのを避けたくて、代わりにこのブログを作り始めました。<br>（タグ一覧どこにどう出そうか、記事一覧もっと見やすくだしたいけどどっからどう着手したらいいか　などの部分）</p>\n<p>勉強にはなったんですけどね。熱が出てきたらまた再開するかもしれませんが。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"使用するパッケージについて\"><a href=\"#使用するパッケージについて\" class=\"headerlink\" title=\"使用するパッケージについて\"></a>使用するパッケージについて</h2><p>markdown-it を最初使っていたのですが、build後のスクリプトに未使用の部分が多くあり、それがページスコアの <code>time to interactive</code> に影響を及ぼしていたので nuxt&#x2F;content に切り替えました。</p>\n<p>切り替えたことで <code>time to interactive</code> と <code>First Contentful Paint</code> の向上が見られましたので、contentが自分の使い方に合っていたということだと思いますが。</p>\n<h2 id=\"構築\"><a href=\"#構築\" class=\"headerlink\" title=\"構築\"></a>構築</h2><p>nuxt&#x2F;content を使って構築していくにあたり、以下を参考にさせていただきました🙇‍♂️<br><a href=\"https://domarpdev.github.io/blog/create-medium-style-blog-theme/\">Create Medium Style Blog Theme with Nuxt JS - Pramod Devireddy</a></p>\n<p>contentはこんな感じで入れます</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm i @nuxt/content</span><br></pre></td></tr></table></figure>\n\n\n<p>ファイル構成はこんな形になります</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">├── content</span><br><span class=\"line\">│   └── blog</span><br><span class=\"line\">│       └── ほげ.md</span><br><span class=\"line\">├── pages</span><br><span class=\"line\">│   └── blog</span><br><span class=\"line\">│       ├── _slug.vue</span><br><span class=\"line\">│       └── index.vue</span><br></pre></td></tr></table></figure>\n\n<p>それぞれの役割は以下です</p>\n<ul>\n<li>content&#x2F;blog&#x2F;ほげ.md<ul>\n<li>markdownで書くブログ記事の内容</li>\n</ul>\n</li>\n<li>pages&#x2F;blog&#x2F;index.vue<ul>\n<li>blog&#x2F; でアクセスしたときの一覧ページのvueファイル</li>\n</ul>\n</li>\n<li>pages&#x2F;blog&#x2F;_slug.vue<ul>\n<li>各ブログ記事を出すためのvueファイル</li>\n</ul>\n</li>\n</ul>\n<p>blog一覧ページには以下のような感じで $content を使って記事を検索し、その結果をvueで使うような形です</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  async asyncData (&#123; $content, params &#125;) &#123;</span><br><span class=\"line\">    const query = await $content(&quot;blog&quot;, params.slug).sortBy(&quot;createdAt&quot;, &quot;desc&quot;)</span><br><span class=\"line\">    const blog = await query.fetch()</span><br><span class=\"line\">    return &#123; blog &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>content情報が取れていれば、vueの方では例えば以下のような形でforをすることで記事の一覧を作ることができます。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;v-card</span><br><span class=\"line\">  v-for=&quot;b of blog&quot;</span><br><span class=\"line\">  :key=&quot;b.slug&quot;</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n\n<p>こんな感じで構成が整えば <code>npm run dev</code> 等で <code>http://localhost:3000/blog/</code> などといったURLでアクセスできます。</p>\n<p>記事一覧が出ているでしょうか？</p>\n<h2 id=\"タグがついた記事の一覧表示\"><a href=\"#タグがついた記事の一覧表示\" class=\"headerlink\" title=\"タグがついた記事の一覧表示\"></a>タグがついた記事の一覧表示</h2><p>content以下のmarkdownファイルに以下のようにタグをつけることができます</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: hoge</span><br><span class=\"line\">tags:</span><br><span class=\"line\">  - ふが</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p>こうやってつけたタグごとの一覧ページも出すことができます</p>\n<p>ファイル構成はこんな感じになります</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">├── pages</span><br><span class=\"line\">│   └── blog</span><br><span class=\"line\">│       ├── tag</span><br><span class=\"line\">│       │    └── _slug</span><br><span class=\"line\">│       │          └── index.vue</span><br><span class=\"line\">│       ├── _slug.vue</span><br><span class=\"line\">│       └── index.vue</span><br></pre></td></tr></table></figure>\n\n<p>要は <code>pages/blog/tag/_slug/index.vue</code> の追加だけです。</p>\n<p>中身はこんな形です</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;v-container mt-50 pt-50&gt;</span><br><span class=\"line\">    &lt;h2</span><br><span class=\"line\">      class=&quot;my-4 mx-9&quot;</span><br><span class=\"line\">      justify=&quot;center&quot;</span><br><span class=\"line\">      align=&quot;center&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">      &lt;v-icon&gt;$tagOutlineIcon&lt;/v-icon&gt;『&#123;&#123; $route.params.slug &#125;&#125;』 のタグがついた記事</span><br><span class=\"line\">    &lt;/h2&gt;</span><br><span class=\"line\">    &lt;div class=&quot;d-flex flex-wrap&quot;&gt;</span><br><span class=\"line\">        &lt;v-card</span><br><span class=\"line\">          class=&quot;ma-6&quot;</span><br><span class=\"line\">          elevation=&quot;5&quot;</span><br><span class=\"line\">          v-for=&quot;b of blog&quot;</span><br><span class=\"line\">          :key=&quot;b.slug&quot;</span><br><span class=\"line\">          width=&quot;500&quot;</span><br><span class=\"line\">        &gt;</span><br><span class=\"line\">          &lt;NuxtLink</span><br><span class=\"line\">            class=&quot;post-card&quot;</span><br><span class=\"line\">            :to=&quot;&#123; name: &#x27;blog-slug&#x27;, params: &#123; slug: b.slug &#125; &#125;&quot;</span><br><span class=\"line\">          &gt;</span><br><span class=\"line\">          &lt;/NuxtLink&gt;</span><br><span class=\"line\">        &lt;/v-card&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;template v-if=&quot;blog.length === 0&quot;&gt;</span><br><span class=\"line\">      &lt;div class=&quot;d-flex flex-wrap justify-center fill-heilght&quot;&gt;</span><br><span class=\"line\">        &#123;&#123; $route.params.name &#125;&#125; に該当する記事はありませんでした</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">    &lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;/v-container&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  head() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      title: this.$route.params.slug</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  async asyncData (&#123; $content, params &#125;) &#123;</span><br><span class=\"line\">    const tag = params.slug</span><br><span class=\"line\">    const blog = await $content(&#x27;blog&#x27;)</span><br><span class=\"line\">      .only([&#x27;title&#x27;, &#x27;img&#x27;, &#x27;createdAt&#x27;, &#x27;slug&#x27;])</span><br><span class=\"line\">      .where(&#123; tags: &#123; $contains: tag &#125; &#125;)</span><br><span class=\"line\">      .sortBy(&#x27;createdAt&#x27;, &#x27;desc&#x27;)</span><br><span class=\"line\">      .fetch()</span><br><span class=\"line\">    return &#123; tag, blog &#125;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">.post-card &#123;</span><br><span class=\"line\">  text-decoration: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n<p>こうすると、<code>http://localhost:3000/blog/タグA/</code> というURLで、タグAのついた記事があれば一覧が出ますし、なければ『ありません』と出ます。</p>\n<h2 id=\"まとめ\"><a href=\"#まとめ\" class=\"headerlink\" title=\"まとめ\"></a>まとめ</h2><p>簡単にオリジナルのブログをつくれました。参考になる記事もたくさんあるので、構築もしやすいです。</p>\n<p>ただ記事一覧の出し方やブログのレイアウトなど、細かい調整にある程度の知識も必要になり、自分はそこに時間をかけるのを避けたくて、代わりにこのブログを作り始めました。<br>（タグ一覧どこにどう出そうか、記事一覧もっと見やすくだしたいけどどっからどう着手したらいいか　などの部分）</p>\n<p>勉強にはなったんですけどね。熱が出てきたらまた再開するかもしれませんが。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clamnokee00011gp87ph0a2qf","category_id":"clamnokeq00041gp870ejbvxz","_id":"clamnokf6000b1gp8hmd01pyw"},{"post_id":"clamnokem00031gp8fsgh6dii","category_id":"clamnokf100081gp8dmuz5qrx","_id":"clamnokf6000d1gp802oc3mgg"}],"PostTag":[{"post_id":"clamnokee00011gp87ph0a2qf","tag_id":"clamnokes00051gp869h57fh0","_id":"clamnokf6000a1gp80a420zpp"},{"post_id":"clamnokev00061gp82ylxh4rc","tag_id":"clamnokf400091gp87ftk7fgg","_id":"clamnokf6000c1gp8e8vhhzmd"}],"Tag":[{"name":"Fileproviderd","_id":"clamnokes00051gp869h57fh0"},{"name":"ラジオ","_id":"clamnokf400091gp87ftk7fgg"}]}}